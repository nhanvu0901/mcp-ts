[tool.coverage.run]
branch = true
source = ["rag-mcp"]

[tool.coverage.report]
exclude_lines = ['if TYPE_CHECKING:']
show_missing = true

[tool.pytest.ini_options]
addopts = """
 --cov
 --cov-report html:'../coverage/rag-mcp/html'
 --cov-report xml:'../coverage/rag-mcp/coverage.xml'
 --html='../reports/rag-mcp/unittests/html/index.html'
 --junitxml='../reports/rag-mcp/unittests/junit.xml'
"""

[project]
name = "rag-mcp"
version = "1.0.0"
description = "Automatically generated by Nx."
requires-python = ">=3.12,<4"
readme = 'README.md'
dependencies = [
    "python-dotenv>=1.0.0",
    "qdrant-client>=1.3.0",
    "langchain-openai>=0.1.0",
    "fastmcp>=2.11.3",
]

[tool.hatch.build.targets.wheel]
packages = ["rag-mcp"]

[tool.hatch.metadata]
allow-direct-references = true

[dependency-groups]
dev = [
    "autopep8>=2.3.1",
    "ruff>=0.8.2",
    "pytest>=8.3.4",
    "pytest-sugar>=1.0.0",
    "pytest-cov>=6.0.0",
    "pytest-html>=4.1.1",
    "scikit-learn>=1.3.0",
    "scipy>=1.11.0",
    "numpy>=1.24.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
exclude = [".ruff_cache", ".svn", ".tox", ".venv", "dist"]

line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]
ignore = []

fixable = ["ALL"]
unfixable = []
